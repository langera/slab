apply plugin: "java"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "maven"

    task writeNewPom << {
        pom {
            project {
                inceptionYear '2013'
                scm {
                    url = 'scm:https://github.com/langera/honey.git'
                    connection = 'scm:https://github.com/langera/honey.git'
                }
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'langera'
                        name = 'Amir Langer'
                        email = 'langera@gmail.com'
                    }
                }
            }
        }.writeTo("$buildDir/pom.xml")
    }

    repositories {
        mavenCentral()
        maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
    }

    version = '0.1'
    jar {
        manifest {
            attributes 'Implementation-Title': 'honey', 'Implementation-Version': version
        }
    }


idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

def nonTransitive(Project... dependencies) {
    def deps = dependencies.collect { project.dependencies.create(it) }
    project.configure(deps, { transitive = false })
}

    dependencies {
        groovy 'org.codehaus.groovy:groovy-all:2.1.7'
        compile 'javassist:javassist:3.12.1.GA'
        compile 'log4j:log4j:1.2.17'
        testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
        testCompile 'cglib:cglib-nodep:2.2'
        testCompile 'org.objenesis:objenesis:1.2'
        testCompile fileTree(dir: 'lib', include: '*.jar')
    }

    task(testPerf, dependsOn: 'testClasses', type: JavaExec) {
        main 'org.langera.core.PerfTest'
        jvmArgs '-Xmx4g', '-Xms4g', '-XX:MaxPermSize=128m'
        classpath sourceSets.test.runtimeClasspath
}


