apply plugin: "java"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "maven"

task writeNewPom << {
    pom {
        project {
            inceptionYear '2014'
            scm {
                url = 'scm:https://github.com/langera/slab.git'
                connection = 'scm:https://github.com/langera/slab.git'
            }
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    distribution 'repo'
                }
            }
            developers {
                developer {
                    id = 'langera'
                    name = 'Amir Langer'
                    email = 'langera@gmail.com'
                }
            }
        }
    }.writeTo("$buildDir/pom.xml")
}

repositories {
    mavenCentral()
    maven { url 'http://oss.sonatype.org/content/repositories/snapshots/' }
}

version = '0.1'
jar {
    manifest {
        attributes 'Implementation-Title': 'slab', 'Implementation-Version': version
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "short"

        debug {
            events "started", "skipped", "failed"
            exceptionFormat "full"
        }

        info.events = ["failed", "skipped", "passed"]
    }

}


idea.project.ipr {
    withXml { provider ->
        provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
    }
}

dependencies {
    groovy 'org.codehaus.groovy:groovy-all:2.1.7'
    testCompile 'javassist:javassist:3.12.1.GA'
    testCompile 'log4j:log4j:1.2.17'
    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
    testCompile 'cglib:cglib-nodep:2.2'
    testCompile 'org.objenesis:objenesis:1.2'
}

task(testPerfSlab, dependsOn: ['testClasses', 'testPerfSlabHeap', 'testPerfSlabOffHeap', 'testPerfSlabArrayList']) { }

task(testPerfSlabHeap, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.SlabPerfTest'
    jvmArgs '-Xmx300m', '-Xms300m'
    args 'Heap', '-verbose'
    classpath sourceSets.test.runtimeClasspath
}
task(testPerfSlabOffHeap, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.SlabPerfTest'
    jvmArgs '-Xmx300m', '-Xms300m'
    args 'OffHeap', '-verbose'
    classpath sourceSets.test.runtimeClasspath
}
task(testPerfSlabArrayList, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.SlabPerfTest'
    jvmArgs '-Xmx300m', '-Xms300m'
    args 'ArrayList', '-verbose'
    classpath sourceSets.test.runtimeClasspath
}

task(testPerfStorage, dependsOn: ['testClasses', 'testPerfStorageDirect', 'testPerfStorageDirectByteBuffer', 'testPerfStorageHeap', 'testPerfStorageHeapByteBuffer']) {
}

task(testPerfStorageDirect, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.StoragePerfTest'
    jvmArgs '-Xmx1g', '-Xms1g'
    args 'Direct'
    classpath sourceSets.test.runtimeClasspath
}
task(testPerfStorageHeap, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.StoragePerfTest'
    jvmArgs '-Xmx1g', '-Xms1g'
    args 'Heap'
    classpath sourceSets.test.runtimeClasspath
}
task(testPerfStorageHeapByteBuffer, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.StoragePerfTest'
    jvmArgs '-Xmx1g', '-Xms1g'
    args 'HeapByteBuffer'
    classpath sourceSets.test.runtimeClasspath
}
task(testPerfStorageDirectByteBuffer, dependsOn: 'testClasses', type: JavaExec) {
    main 'com.yahoo.slab.perf.StoragePerfTest'
    jvmArgs '-Xmx1g', '-Xms1g'
    args 'DirectByteBuffer'
    classpath sourceSets.test.runtimeClasspath
}


